{
  "codes": [
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"cache.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"config.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"grep.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"object-store.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"userdiff.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"xdiff-interface.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"diff.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"diffcore.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"commit.h\""
    },
    {
      "color": {
        "cct": 146911.42,
        "value": "#c74ded"
      },
      "content": "#include"
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "quote.h"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\""
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#include\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "help.h"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\""
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_load(structgrep_source*gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_is_binary(structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structindex_state*istate);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidstd_output(structgrep_opt*opt,constvoid*buf,size_tsize)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "fwrite(buf,size,1,stdout);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_optgrep_defaults={"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".relative=1,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".pathname=1,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".max_depth=-1,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".pattern_type_option=GREP_PATTERN_TYPE_UNSPECIFIED,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".colors={"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_CONTEXT]=\"\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_FILENAME]=GIT_COLOR_MAGENTA,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_FUNCTION]=\"\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_LINENO]=GIT_COLOR_GREEN,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_COLUMNNO]=GIT_COLOR_GREEN,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_MATCH_CONTEXT]=GIT_COLOR_BOLD_RED,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_MATCH_SELECTED]=GIT_COLOR_BOLD_RED,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_SELECTED]=\"\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_SEP]=GIT_COLOR_CYAN,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "},"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".only_matching=0,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".color=-1,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ".output=std_output,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "};"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticconstchar*color_grep_slots[]={"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_CONTEXT]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "context"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_FILENAME]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "filename"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_FUNCTION]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "function"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_LINENO]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "lineNumber"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_COLUMNNO]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "column"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_MATCH_CONTEXT]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "matchContext"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_MATCH_SELECTED]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "matchSelected"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_SELECTED]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "selected"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "[GREP_COLOR_SEP]=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "separator"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "};"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintparse_pattern_type_arg(constchar*opt,constchar*arg)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(arg,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "default"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnGREP_PATTERN_TYPE_UNSPECIFIED;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(!strcmp(arg,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "basic"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnGREP_PATTERN_TYPE_BRE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(!strcmp(arg,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "extended"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnGREP_PATTERN_TYPE_ERE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(!strcmp(arg,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "fixed"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnGREP_PATTERN_TYPE_FIXED;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(!strcmp(arg,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "perl"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnGREP_PATTERN_TYPE_PCRE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "bad%sargument:%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",opt,arg);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "define_list_config_array_extra(color_grep_slots,{\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "match"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"});"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Readtheconfigurationfileonceandstoreitin"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thegrep_defaultstemplate."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intgrep_config(constchar*var,constchar*value,void*cb)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_opt*opt=&grep_defaults;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*slot;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(userdiff_config(var,value)<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Theinstanceofgrep_optthatwesetuphereiscopiedby"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*grep_init()tobeusedbyeachindividualinvocation."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Whenpopulatinganewfieldofthisstructurehere,be"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*suretothinkaboutownership--e.g.,youmightneedto"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*overridetheshallowcopyingrep_init()withadeepcopy."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep.extendedregexp"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended_regexp_option=git_config_bool(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep.patterntype"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_type_option=parse_pattern_type_arg(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep.linenumber"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->linenum=git_config_bool(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep.column"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->columnnum=git_config_bool(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep.fullname"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->relative=!git_config_bool(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "color.grep"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->color=git_config_colorbool(var,value);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!strcmp(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "color.grep.match"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\")){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_config(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "color.grep.matchcontext"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",value,cb)<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_config(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "color.grep.matchselected"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",value,cb)<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}elseif(skip_prefix(var,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "color.grep."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",&slot)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inti=LOOKUP_CONFIG(color_grep_slots,slot);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "char*color;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(i<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "color=opt->colors[i];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!value)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnconfig_error_nonbool(var);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returncolor_parse(value,color);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Initializeoneinstanceofgrep_optandcopythe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*defaultvaluesfromthetemplatewereadtheconfiguration"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*informationinanearliercalltogit_config(grep_config)."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_init(structgrep_opt*opt,structrepository*repo,constchar*prefix)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*opt=grep_defaults;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->repo=repo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->prefix=prefix;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->prefix_length=(prefix&&*prefix)?strlen(prefix):0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_tail=&opt->pattern_list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->header_tail=&opt->header_list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidgrep_set_pattern_type_option(enumgrep_pattern_typepattern_type,structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Whencommittingtothepatterntypebysettingtherelevant"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*fieldsingrep_optit'sgenerallynotnecessarytozeroout"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thefieldswe'renotchoosing,sincetheywon'thavebeen"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*setbyanything.Theextended_regexp_optionfieldisthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*onlyexceptiontothis."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thisisbecauseintheprocessofparsinggrep.patternType"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*&grep.extendedRegexpwesetopt->pattern_type_optionand"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*opt->extended_regexp_option,respectively.Wethen"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*internallyuseopt->extended_regexp_optiontoseeifwe're"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*compilinganERE.Itmustbeunsetifthat'snotactually"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thecase."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pattern_type!=GREP_PATTERN_TYPE_ERE&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended_regexp_option)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended_regexp_option=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(pattern_type){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_TYPE_UNSPECIFIED:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*fallthrough*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_TYPE_BRE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_TYPE_ERE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended_regexp_option=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_TYPE_FIXED:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->fixed=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_TYPE_PCRE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pcre2=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_commit_pattern_type(enumgrep_pattern_typepattern_type,structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pattern_type!=GREP_PATTERN_TYPE_UNSPECIFIED)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_set_pattern_type_option(pattern_type,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(opt->pattern_type_option!=GREP_PATTERN_TYPE_UNSPECIFIED)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_set_pattern_type_option(opt->pattern_type_option,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(opt->extended_regexp_option)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thisbranch*must*happenaftersettingfromthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*opt->pattern_type_optionabove,wedon'twant"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*grep.extendedRegexptooverridegrep.patternType!"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_set_pattern_type_option(GREP_PATTERN_TYPE_ERE,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_pat*create_grep_pat(constchar*pat,size_tpatlen,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*origin,intno,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_pat_tokent,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_header_fieldfield)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p=xcalloc(1,sizeof(*p));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pattern=xmemdupz(pat,patlen);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen=patlen;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->origin=origin;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->no=no;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->token=t;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->field=field;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoiddo_append_grep_pat(structgrep_pat***tail,structgrep_pat*p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "**tail=p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*tail=&p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->next=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN:/*atom*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_HEAD:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_BODY:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(;;){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*new_pat;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tlen=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "char*cp=p->pattern+p->patternlen,*nl=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(++len<=p->patternlen){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(*(--cp)=='\\n'){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "nl=cp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!nl)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "new_pat=create_grep_pat(nl+1,len-1,p->origin,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->no,p->token,p->field);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "new_pat->next=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->next)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*tail=&new_pat->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->next=new_pat;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*nl='\\0';"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen-=len;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidappend_header_grep_pattern(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_header_fieldfield,constchar*pat)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p=create_grep_pat(pat,strlen(pat),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "header"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",0,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "GREP_PATTERN_HEAD,field);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(field==GREP_HEADER_REFLOG)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->use_reflog_filter=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "do_append_grep_pat(&opt->header_tail,p);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidappend_grep_pattern(structgrep_opt*opt,constchar*pat,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*origin,intno,enumgrep_pat_tokent)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "append_grep_pat(opt,pat,strlen(pat),origin,no,t);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidappend_grep_pat(structgrep_opt*opt,constchar*pat,size_tpatlen,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*origin,intno,enumgrep_pat_tokent)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p=create_grep_pat(pat,patlen,origin,no,t,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "do_append_grep_pat(&opt->pattern_tail,p);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_opt*grep_opt_dup(conststructgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*pat;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_opt*ret=xmalloc(sizeof(structgrep_opt));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*ret=*opt;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ret->pattern_list=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ret->pattern_tail=&ret->pattern_list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(pat=opt->pattern_list;pat!=NULL;pat=pat->next)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pat->token==GREP_PATTERN_HEAD)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "append_header_grep_pattern(ret,pat->field,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pat->pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "append_grep_pat(ret,pat->pattern,pat->patternlen,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pat->origin,pat->no,pat->token);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnret;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticNORETURNvoidcompile_regexp_failed(conststructgrep_pat*p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*error)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charwhere[1024];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->no)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xsnprintf(where,sizeof(where),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "In'%s'at%d,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->origin,p->no);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(p->origin)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xsnprintf(where,sizeof(where),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%s,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->origin);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "where[0]=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%s'%s':%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",where,p->pattern,error);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintis_fixed(constchar*s,size_tlen)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_ti;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(i=0;i<len;i++){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(is_regex_special(s[i]))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifdefUSE_LIBPCRE2"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#defineGREP_PCRE2_DEBUG_MALLOC0"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoid*pcre2_malloc(PCRE2_SIZEsize,MAYBE_UNUSEDvoid*memory_data)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "void*pointer=malloc(size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifGREP_PCRE2_DEBUG_MALLOC"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintcount=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "fprintf(stderr,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "PCRE2:%p->#%02d:alloc(%lu)\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",pointer,count++,size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnpointer;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidpcre2_free(void*pointer,MAYBE_UNUSEDvoid*memory_data)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifGREP_PCRE2_DEBUG_MALLOC"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintcount=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pointer)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "fprintf(stderr,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "PCRE2:%p->#%02d:free()\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",pointer,count++);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free(pointer);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidcompile_pcre2_pattern(structgrep_pat*p,conststructgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "interror;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "PCRE2_UCHARerrbuf[256];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "PCRE2_SIZEerroffset;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intoptions=PCRE2_MULTILINE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intjitret;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intpatinforet;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tjitsizearg;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intliteral=!opt->ignore_case&&(p->fixed||p->is_fixed);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Callpcre2_general_context_create()beforecallingany"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*otherpcre2_*().Itsetsupourmalloc()/free()functions"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*withwhicheverythingelseisallocated."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_general_context=pcre2_general_context_create("
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_malloc,pcre2_free,NULL);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->pcre2_general_context)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Couldn'tallocatePCRE2generalcontext"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->ignore_case){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->ignore_locale&&has_non_ascii(p->pattern)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_tables=pcre2_maketables(p->pcre2_general_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_compile_context=pcre2_compile_context_create(p->pcre2_general_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_set_character_tables(p->pcre2_compile_context,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_tables);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "options|=PCRE2_CASELESS;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->ignore_locale&&is_utf8_locale()&&!literal)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "options|=(PCRE2_UTF|PCRE2_MATCH_INVALID_UTF);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifdefGIT_PCRE2_VERSION_10_36_OR_HIGHER"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Workaroundhttps://bugs.exim.org/show_bug.cgi?id=2642fixedin10.36*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(PCRE2_MATCH_INVALID_UTF&&options&(PCRE2_UTF|PCRE2_CASELESS))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "options|=PCRE2_NO_START_OPTIMIZE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_pattern=pcre2_compile((PCRE2_SPTR)p->pattern,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen,options,&error,&erroffset,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_compile_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->pcre2_pattern){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_match_data=pcre2_match_data_create_from_pattern(p->pcre2_pattern,p->pcre2_general_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->pcre2_match_data)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Couldn'tallocatePCRE2matchdata"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}else{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_get_error_message(error,errbuf,sizeof(errbuf));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_regexp_failed(p,(constchar*)&errbuf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_config(PCRE2_CONFIG_JIT,&p->pcre2_jit_on);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->pcre2_jit_on){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "jitret=pcre2_jit_compile(p->pcre2_pattern,PCRE2_JIT_COMPLETE);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(jitret)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Couldn'tJITthePCRE2pattern'%s',got'%d'\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->pattern,jitret);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thepcre2_config(PCRE2_CONFIG_JIT,...)calljust"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*tellsuswhetherthelibraryitselfsupportsJIT,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*buttoseewhetherwe'regoingtobeactuallyusing"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*JITweneedtoextractPCRE2_INFO_JITSIZEfromthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*pattern*after*wedopcre2_jit_compile()above."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thisisbecauseifthepatterncontainsthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*(*NO_JIT)verb(seepcre2syntax(3))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*pcre2_jit_compile()willexitearlywith0.Ifwe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thenproceedtocallpcre2_jit_match()furtherdown"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thelineinsteadofpcre2_match()we'lleither"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*segfault(prePCRE10.31)orrunintoafatalerror"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*(postPCRE210.31)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "patinforet=pcre2_pattern_info(p->pcre2_pattern,PCRE2_INFO_JITSIZE,&jitsizearg);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(patinforet)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "pcre2_pattern_info()failed:%d"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",patinforet);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(jitsizearg==0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pcre2_jit_on=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintpcre2match(structgrep_pat*p,constchar*line,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_t*match,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intret,flags=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "PCRE2_SIZE*ovector;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "PCRE2_UCHARerrbuf[256];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(eflags&REG_NOTBOL)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "flags|=PCRE2_NOTBOL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->pcre2_jit_on)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ret=pcre2_jit_match(p->pcre2_pattern,(unsignedchar*)line,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eol-line,0,flags,p->pcre2_match_data,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "NULL);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ret=pcre2_match(p->pcre2_pattern,(unsignedchar*)line,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eol-line,0,flags,p->pcre2_match_data,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "NULL);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(ret<0&&ret!=PCRE2_ERROR_NOMATCH){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_get_error_message(ret,errbuf,sizeof(errbuf));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%sfailedwitherrorcode%d:%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\","
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(p->pcre2_jit_on?\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "pcre2_jit_match"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\":\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "pcre2_match"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"),ret,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "errbuf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(ret>0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ovector=pcre2_get_ovector_pointer(p->pcre2_match_data);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ret=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match->rm_so=(int)ovector[0];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match->rm_eo=(int)ovector[1];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnret;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidfree_pcre2_pattern(structgrep_pat*p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_compile_context_free(p->pcre2_compile_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_code_free(p->pcre2_pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_match_data_free(p->pcre2_match_data);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifdefGIT_PCRE2_VERSION_10_34_OR_HIGHER"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_maketables_free(p->pcre2_general_context,p->pcre2_tables);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free((void*)p->pcre2_tables);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pcre2_general_context_free(p->pcre2_general_context);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#else/*!USE_LIBPCRE2*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidcompile_pcre2_pattern(structgrep_pat*p,conststructgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "cannotusePerl-compatibleregexeswhennotcompiledwithUSE_LIBPCRE"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintpcre2match(structgrep_pat*p,constchar*line,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_t*match,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidfree_pcre2_pattern(structgrep_pat*p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidcompile_fixed_regexp(structgrep_pat*p,structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structstrbufsb=STRBUF_INIT;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "interr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intregflags=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "basic_regex_quote_buf(&sb,p->pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->ignore_case)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regflags|=REG_ICASE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "err=regcomp(&p->regexp,sb.buf,regflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strbuf_release(&sb);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(err){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charerrbuf[1024];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regerror(err,&p->regexp,errbuf,sizeof(errbuf));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_regexp_failed(p,errbuf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif/*!USE_LIBPCRE2*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidcompile_regexp(structgrep_pat*p,structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "interr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intregflags=REG_NEWLINE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->word_regexp=opt->word_regexp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->ignore_case=opt->ignore_case;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->fixed=opt->fixed;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(memchr(p->pattern,0,p->patternlen)&&!opt->pcre2)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(_(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "givenpatterncontainsNULLbyte(via-f"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "<file>"
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": ").Thisisonlysupportedwith-PunderPCREv2"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->is_fixed=is_fixed(p->pattern,p->patternlen);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifdefUSE_LIBPCRE2"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->fixed&&!p->is_fixed){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*no_jit=\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "(*NO_JIT)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\";"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constintno_jit_len=strlen(no_jit);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(starts_with(p->pattern,no_jit)&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "is_fixed(p->pattern+no_jit_len,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen-no_jit_len))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->is_fixed=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->fixed||p->is_fixed){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#ifdefUSE_LIBPCRE2"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->is_fixed){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_pcre2_pattern(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}else{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*E.g.t7811-grep-open.shreliesonthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*patternbeingrestored."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "char*old_pattern=p->pattern;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_told_patternlen=p->patternlen;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structstrbufsb=STRBUF_INIT;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*ThereisthePCRE2_LITERALflag,butit's"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*onlyinPCREv210.30andlater.Needingto"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*ifdefourwayaroundthatanddealingwith"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*it+PCRE2_MULTILINEbeinganerrorismore"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*complexthanjustquotingthisourselves."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strbuf_add(&sb,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\\\Q"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",2);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strbuf_add(&sb,p->pattern,p->patternlen);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strbuf_add(&sb,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\\\E"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",2);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pattern=sb.buf;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen=sb.len;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_pcre2_pattern(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->pattern=old_pattern;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p->patternlen=old_patternlen;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strbuf_release(&sb);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#else/*!USE_LIBPCRE2*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_fixed_regexp(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "#endif/*!USE_LIBPCRE2*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->pcre2){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_pcre2_pattern(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->ignore_case)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regflags|=REG_ICASE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->extended_regexp_option)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regflags|=REG_EXTENDED;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "err=regcomp(&p->regexp,p->pattern,regflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(err){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charerrbuf[1024];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regerror(err,&p->regexp,errbuf,1024);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_regexp_failed(p,errbuf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_not_expr(structgrep_expr*expr)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*z=xcalloc(1,sizeof(*z));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->node=GREP_NODE_NOT;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->u.unary=expr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnz;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_binexp(enumgrep_expr_nodekind,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*left,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*right)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*z=xcalloc(1,sizeof(*z));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->node=kind;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->u.binary.left=left;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->u.binary.right=right;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnz;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_or_expr(structgrep_expr*left,structgrep_expr*right)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_binexp(GREP_NODE_OR,left,right);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_and_expr(structgrep_expr*left,structgrep_expr*right)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_binexp(GREP_NODE_AND,left,right);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_or(structgrep_pat**);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_atom(structgrep_pat**list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*x;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p=*list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnNULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN:/*atom*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_HEAD:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_BODY:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "CALLOC_ARRAY(x,1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->node=GREP_NODE_ATOM;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->u.atom=p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*list=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnx;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_OPEN_PAREN:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*list=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=compile_pattern_or(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!*list||(*list)->token!=GREP_CLOSE_PAREN)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "unmatchedparenthesis"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*list=(*list)->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnx;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnNULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_not(structgrep_pat**list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*x;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p=*list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnNULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NOT:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->next)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--notnotfollowedbypatternexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*list=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=compile_pattern_not(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--notfollowedbynonpatternexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_not_expr(x);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returncompile_pattern_atom(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_and(structgrep_pat**list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*x,*y;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=compile_pattern_not(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p=*list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p&&p->token==GREP_AND){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--andnotprecededbypatternexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!p->next)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--andnotfollowedbypatternexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*list=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "y=compile_pattern_and(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!y)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--andnotfollowedbypatternexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_and_expr(x,y);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnx;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_or(structgrep_pat**list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*x,*y;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=compile_pattern_and(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p=*list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(x&&p&&p->token!=GREP_CLOSE_PAREN){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "y=compile_pattern_or(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!y)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "notapatternexpression%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_or_expr(x,y);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnx;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*compile_pattern_expr(structgrep_pat**list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returncompile_pattern_or(list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_true_expr(void)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*z=xcalloc(1,sizeof(*z));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "z->node=GREP_NODE_TRUE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnz;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*prep_header_patterns(structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*header_expr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*(header_group[GREP_HEADER_FIELD_MAX]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_header_fieldfld;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->header_list)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnNULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->header_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->token!=GREP_PATTERN_HEAD)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "anon-headerpatterningrepheaderlist."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->field<GREP_HEADER_FIELD_MIN||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "GREP_HEADER_FIELD_MAX<=p->field)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "unknownheaderfield%d"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->field);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_regexp(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(fld=0;fld<GREP_HEADER_FIELD_MAX;fld++)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_group[fld]=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->header_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*h;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*pp=p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=compile_pattern_atom(&pp);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!h||pp!=p->next)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "malformedheaderexpr"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!header_group[p->field]){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_group[p->field]=h;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "continue;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_group[p->field]=grep_or_expr(h,header_group[p->field]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_expr=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(fld=0;fld<GREP_HEADER_FIELD_MAX;fld++){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!header_group[fld])"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "continue;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!header_expr)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_expr=grep_true_expr();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_expr=grep_or_expr(header_group[fld],header_expr);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnheader_expr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstructgrep_expr*grep_splice_or(structgrep_expr*x,structgrep_expr*y)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*z=x;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(x){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "assert(x->node==GREP_NODE_OR);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(x->u.binary.right&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->u.binary.right->node==GREP_NODE_TRUE){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->u.binary.right=y;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=x->u.binary.right;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnz;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidcompile_grep_patterns(structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*header_expr=prep_header_patterns(opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->pattern_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN:/*atom*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_HEAD:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_BODY:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "compile_regexp(p,opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->all_match||opt->no_body_match||header_expr)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->extended=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(!opt->extended)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p=opt->pattern_list;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression=compile_pattern_expr(&p);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "incompletepatternexpression:%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",p->pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->no_body_match&&opt->pattern_expression)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression=grep_not_expr(opt->pattern_expression);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!header_expr)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->pattern_expression)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression=header_expr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(opt->all_match)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression=grep_splice_or(header_expr,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->pattern_expression=grep_or_expr(opt->pattern_expression,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "header_expr);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->all_match=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidfree_pattern_expr(structgrep_expr*x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(x->node){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_TRUE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_ATOM:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_NOT:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_pattern_expr(x->u.unary);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_AND:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_OR:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_pattern_expr(x->u.binary.left);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_pattern_expr(x->u.binary.right);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free(x);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidfree_grep_patterns(structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p,*n;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->pattern_list;p;p=n){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "n=p->next;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN:/*atom*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_HEAD:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_BODY:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->pcre2_pattern)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_pcre2_pattern(p);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regfree(&p->regexp);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free(p->pattern);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free(p);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->extended)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_pattern_expr(opt->pattern_expression);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticconstchar*end_of_line(constchar*cp,unsignedlong*left)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlongl=*left;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(l&&*cp!='\\n'){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "l--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cp++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*left=l;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returncp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintword_char(charch)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnisalnum(ch)||ch=='_';"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidoutput_color(structgrep_opt*opt,constvoid*data,size_tsize,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*color)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(want_color(opt->color)&&color&&color[0]){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,color,strlen(color));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,data,size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,GIT_COLOR_RESET,strlen(GIT_COLOR_RESET));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,data,size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidoutput_sep(structgrep_opt*opt,charsign)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->null_following_name)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\0"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,&sign,1,opt->colors[GREP_COLOR_SEP]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidshow_name(structgrep_opt*opt,constchar*name)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,name,strlen(name),opt->colors[GREP_COLOR_FILENAME]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,opt->null_following_name?\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\0"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\":\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintpatmatch(structgrep_pat*p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*line,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_t*match,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->pcre2_pattern)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=!pcre2match(p,line,eol,match,eflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=!regexec_buf(&p->regexp,line,eol-line,1,match,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnhit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidstrip_timestamp(constchar*bol,constchar**eol_p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*eol=*eol_p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol<--eol){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(*eol!='>')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "continue;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*eol_p=++eol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticstruct{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*field;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tlen;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}header_field[]={"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "author"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",7},"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "committer"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",10},"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "reflog"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",7},"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "};"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintheaderless_match_one_pattern(structgrep_pat*p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_t*pmatch,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*start=bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if((p->token!=GREP_PATTERN)&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "((p->token==GREP_PATTERN_HEAD)!=(ctx==GREP_CONTEXT_HEAD)))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "again:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=patmatch(p,bol,eol,pmatch,eflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(hit&&p->word_regexp){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if((pmatch[0].rm_so<0)||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(eol-bol)<pmatch[0].rm_so||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(pmatch[0].rm_eo<0)||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(eol-bol)<pmatch[0].rm_eo)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "regexpreturnednonsense"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Matchbeginningmustbeeitherbeginningofthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*line,oratwordboundary(i.e.thelastcharmust"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*notbeawordchar).Similarly,matchendmustbe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*eitherendoftheline,oratwordboundary"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*(i.e.thenextcharmustnotbeawordchar)."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(((pmatch[0].rm_so==0)||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "!word_char(bol[pmatch[0].rm_so-1]))&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "((pmatch[0].rm_eo==(eol-bol))||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "!word_char(bol[pmatch[0].rm_eo])))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ";"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Wordsconsistofatleastonecharacter.*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pmatch->rm_so==pmatch->rm_eo)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!hit&&pmatch[0].rm_so+bol+1<eol){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Therecouldbemorethanonematchonthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*line,andthefirstmatchmightnotbe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*strictwordmatch.Butlateronescouldbe!"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Forwardtothenextpossiblestart,i.e.the"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*nextpositionfollowinganon-wordchar."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol=pmatch[0].rm_so+bol+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(word_char(bol[-1])&&bol<eol)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eflags|=REG_NOTBOL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(bol<eol)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotoagain;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(hit){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch[0].rm_so+=bol-start;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch[0].rm_eo+=bol-start;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnhit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_one_pattern(structgrep_pat*p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,regmatch_t*pmatch,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*field;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tlen;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->token==GREP_PATTERN_HEAD){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "assert(p->field<ARRAY_SIZE(header_field));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "field=header_field[p->field].field;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "len=header_field[p->field].len;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(strncmp(bol,field,len))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol+=len;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->field){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_HEADER_AUTHOR:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_HEADER_COMMITTER:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "strip_timestamp(bol,&eol);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnheaderless_match_one_pattern(p,bol,eol,ctx,pmatch,eflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_expr_eval(structgrep_opt*opt,structgrep_expr*x,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,ssize_t*col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ssize_t*icol,intcollect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inth=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Notavalidgrepexpression"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(x->node){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_TRUE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_ATOM:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_ttmp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=match_one_pattern(x->u.atom,bol,eol,ctx,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "&tmp,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(h&&(*col<0||tmp.rm_so<*col))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*col=tmp.rm_so;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(x->u.atom->token==GREP_PATTERN_BODY)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->body_hit|=h;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_NOT:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*UponvisitingaGREP_NODE_NOT,colandicolbecomeswapped."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=!match_expr_eval(opt,x->u.unary,bol,eol,ctx,icol,col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_AND:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=match_expr_eval(opt,x->u.binary.left,bol,eol,ctx,col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "icol,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(h||opt->columnnum){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Don'tshort-circuitANDwhengiven--column,sincea"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*NOTearlierinthetreemayturnthisintoanOR.In"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thiscase,seethebelowcomment."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h&=match_expr_eval(opt,x->u.binary.right,bol,eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ctx,col,icol,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_NODE_OR:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!(collect_hits||opt->columnnum)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Don'tshort-circuitORwhengiven--column(or"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*collectinghits)toensurewedon'tskipalater"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*childthatwouldproduceanearliermatch."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return(match_expr_eval(opt,x->u.binary.left,bol,eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ctx,col,icol,0)||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match_expr_eval(opt,x->u.binary.right,bol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eol,ctx,col,icol,0));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h=match_expr_eval(opt,x->u.binary.left,bol,eol,ctx,col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "icol,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(collect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->u.binary.left->hit|=h;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "h|=match_expr_eval(opt,x->u.binary.right,bol,eol,ctx,col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "icol,collect_hits);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "die(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Unexpectednodetype(internalerror)%d"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",x->node);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(collect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->hit|=h;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnh;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_expr(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,ssize_t*col,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ssize_t*icol,intcollect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_expr*x=opt->pattern_expression;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnmatch_expr_eval(opt,x,bol,eol,ctx,col,icol,collect_hits);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_line(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ssize_t*col,ssize_t*icol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,intcollect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->extended)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnmatch_expr(opt,bol,eol,ctx,col,icol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "collect_hits);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*wedonotcallwithcollect_hitswithoutbeingextended*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->pattern_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_ttmp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match_one_pattern(p,bol,eol,ctx,&tmp,0)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit|=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->columnnum){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Without--column,anysinglematchonaline"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*isenoughtoknowthatitneedstobe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*printed.With--column,scan_all_patterns"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*tofindtheearliest."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(*col<0||tmp.rm_so<*col)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*col=tmp.rm_so;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnhit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_next_pattern(structgrep_pat*p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_t*pmatch,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_tmatch;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!headerless_match_one_pattern(p,bol,eol,ctx,&match,eflags))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match.rm_so<0||match.rm_eo<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(pmatch->rm_so>=0&&pmatch->rm_eo>=0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match.rm_so>pmatch->rm_so)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match.rm_so==pmatch->rm_so&&match.rm_eo<pmatch->rm_eo)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch->rm_so=match.rm_so;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch->rm_eo=match.rm_eo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intgrep_next_match(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx,regmatch_t*pmatch,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_header_fieldfield,inteflags)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch->rm_so=pmatch->rm_eo=-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(bol<eol){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=((ctx==GREP_CONTEXT_HEAD)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "?opt->header_list:opt->pattern_list);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(p->token){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_HEAD:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if((field!=GREP_HEADER_FIELD_MAX)&&"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(p->field!=field))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "continue;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*fallthru*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN:/*atom*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_PATTERN_BODY:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit|=match_next_pattern(p,bol,eol,ctx,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pmatch,eflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnhit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidshow_line_header(structgrep_opt*opt,constchar*name,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlno,ssize_tcno,charsign)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->heading&&opt->last_shown==0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,name,strlen(name),opt->colors[GREP_COLOR_FILENAME]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->last_shown=lno;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->heading&&opt->pathname){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,name,strlen(name),opt->colors[GREP_COLOR_FILENAME]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_sep(opt,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->linenum){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charbuf[32];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xsnprintf(buf,sizeof(buf),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%d"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",lno);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,buf,strlen(buf),opt->colors[GREP_COLOR_LINENO]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_sep(opt,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Treat'cno'asthe1-indexedoffsetfromthestartofanon-context"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*linetoitsfirstmatch.Otherwise,'cno'is0indicatingthatweare"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*beingcalledwithacontextline."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->columnnum&&cno){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charbuf[32];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xsnprintf(buf,sizeof(buf),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"PRIuMAX,(uintmax_t)cno);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,buf,strlen(buf),opt->colors[GREP_COLOR_COLUMNNO]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_sep(opt,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidshow_line(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*name,unsignedlno,ssize_tcno,charsign)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intrest=eol-bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*match_color=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*line_color=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->file_break&&opt->last_shown==0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->show_hunk_mark)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}elseif(opt->pre_context||opt->post_context||opt->funcbody){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->last_shown==0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->show_hunk_mark){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",2,opt->colors[GREP_COLOR_SEP]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}elseif(lno>opt->last_shown+1){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "--"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",2,opt->colors[GREP_COLOR_SEP]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->only_matching){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Incasethelinewe'rebeingcalledwithcontainsmorethan"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*onematch,leaveprintingeachheadertotheloopbelow."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line_header(opt,name,lno,cno,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->color||opt->only_matching){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_tmatch;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx=GREP_CONTEXT_BODY;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inteflags=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->color){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(sign==':')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match_color=opt->colors[GREP_COLOR_MATCH_SELECTED];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match_color=opt->colors[GREP_COLOR_MATCH_CONTEXT];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(sign==':')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "line_color=opt->colors[GREP_COLOR_SELECTED];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(sign=='-')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "line_color=opt->colors[GREP_COLOR_CONTEXT];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(sign=='=')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "line_color=opt->colors[GREP_COLOR_FUNCTION];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(grep_next_match(opt,bol,eol,ctx,&match,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "GREP_HEADER_FIELD_MAX,eflags)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match.rm_so==match.rm_eo)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->only_matching)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line_header(opt,name,lno,cno,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,bol,match.rm_so,line_color);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,bol+match.rm_so,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match.rm_eo-match.rm_so,match_color);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->only_matching)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol+=match.rm_eo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cno+=match.rm_eo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "rest-=match.rm_eo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eflags=REG_NOTBOL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->only_matching){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,bol,rest,line_color);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intgrep_use_locks;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thislockprotectsaccesstothegitattributesmachinery,whichis"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*notthread-safe."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pthread_mutex_tgrep_attr_mutex;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticinlinevoidgrep_attr_lock(void)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_use_locks)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pthread_mutex_lock(&grep_attr_mutex);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticinlinevoidgrep_attr_unlock(void)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_use_locks)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "pthread_mutex_unlock(&grep_attr_mutex);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintmatch_funcname(structgrep_opt*opt,structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*eol)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xdemitconf_t*xecfg=opt->priv;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(xecfg&&!xecfg->find_func){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_load_driver(gs,opt->repo->index);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(gs->driver->funcname.pattern){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "conststructuserdiff_funcname*pe=&gs->driver->funcname;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xdiff_set_find_func(xecfg,pe->pattern,pe->cflags);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}else{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xecfg=opt->priv=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(xecfg){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charbuf[1];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnxecfg->find_func(bol,eol-bol,buf,1,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xecfg->find_func_priv)>=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(bol==eol)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(isalpha(*bol)||*bol=='_'||*bol=='$')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidshow_funcname_line(structgrep_opt*opt,structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,unsignedlno)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol>gs->buf){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*eol=--bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol>gs->buf&&bol[-1]!='\\n')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "lno--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(lno<=opt->last_shown)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match_funcname(opt,gs,bol,eol)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line(opt,bol,eol,gs->name,lno,0,'=');"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintis_empty_line(constchar*bol,constchar*eol);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidshow_pre_context(structgrep_opt*opt,structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol,constchar*end,unsignedlno)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedcur=lno,from=1,funcname_lno=0,orig_from;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intfuncname_needed=!!opt->funcname,comment_needed=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->pre_context<lno)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "from=lno-opt->pre_context;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(from<=opt->last_shown)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "from=opt->last_shown+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "orig_from=from;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->funcbody){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match_funcname(opt,gs,bol,end))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "comment_needed=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "funcname_needed=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "from=opt->last_shown+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Rewind.*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol>gs->buf&&cur>from){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*next_bol=bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*eol=--bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol>gs->buf&&bol[-1]!='\\n')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cur--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(comment_needed&&(is_empty_line(bol,eol)||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "match_funcname(opt,gs,bol,eol))){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "comment_needed=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "from=orig_from;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(cur<from){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cur++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol=next_bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(funcname_needed&&match_funcname(opt,gs,bol,eol)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "funcname_lno=cur;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "funcname_needed=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->funcbody)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "comment_needed=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "else"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "from=orig_from;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Weneedtolookevenfurtherbacktofindafunctionsignature.*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->funcname&&funcname_needed)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_funcname_line(opt,gs,bol,cur);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Backforward.*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(cur<lno){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*eol=bol,sign=(cur==funcname_lno)?'=':'-';"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(*eol!='\\n')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eol++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line(opt,bol,eol,gs->name,cur,0,sign);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol=eol+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cur++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintshould_lookahead(structgrep_opt*opt)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->extended)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;/*puntfortoocomplexstuff*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->invert)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->pattern_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(p->token!=GREP_PATTERN)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;/*puntfor\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "headeronly"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"andstuff*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintlook_ahead(structgrep_opt*opt,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlong*left_p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsigned*lno_p,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar**bol_p)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlno=*lno_p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol=*bol_p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_pat*p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*sp,*last_bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regoff_tearliest=-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(p=opt->pattern_list;p;p=p->next){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "regmatch_tm;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=patmatch(p,bol,bol+*left_p,&m,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!hit||m.rm_so<0||m.rm_eo<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "continue;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(earliest<0||m.rm_so<earliest)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "earliest=m.rm_so;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(earliest<0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*bol_p=bol+*left_p;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*left_p=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(sp=bol+earliest;bol<sp&&sp[-1]!='\\n';sp--)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": ";/*findthebeginningoftheline*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "last_bol=sp;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "for(sp=bol;sp<last_bol;sp++){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(*sp=='\\n')"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "lno++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*left_p-=last_bol-bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*bol_p=last_bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*lno_p=lno;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintfill_textconv_grep(structrepository*r,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structuserdiff_driver*driver,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structdiff_filespec*df;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "char*buf;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tsize;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!driver||!driver->textconv)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_source_load(gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thetextconvinterfaceisintimatelytiedtodiff_filespecs,sowe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*havetopretendtobeone.Ifwecouldunifythegrep_source"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*anddiff_filespecstructs,thismesscouldjustgoaway."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "df=alloc_filespec(gs->path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(gs->type){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_OID:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "fill_filespec(df,gs->identifier,1,0100644);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_FILE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "fill_filespec(df,null_oid(),0,0100644);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "attempttotextconvsomethingwithoutapath?"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*fill_textconvisnotremotelythread-safe;itmodifiestheglobal"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*difftempfilestructure,writestothe_repo'sodbandmight"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*internallycallthread-unsafefunctionssuchasthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*prepare_packed_git()lazy-initializator.Becauseofthelasttwo,we"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*mustensuremutualexclusionbetweenthiscallandtheobjectreading"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*API,thusweuseobj_read_lock()here."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*TODO:allowingtextconversiontoruninparallelwithobject"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*readingoperationsmightincreaseperformanceinthemultithreaded"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*non-worktreeegit-grepwith--textconv."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "obj_read_lock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size=fill_textconv(r,driver,df,&buf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "obj_read_unlock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free_filespec(df);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thenormalfill_textconvusagebythediffmachinerywouldjustkeep"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thetextconv'dbufseparatefromthediff_filespec.Butmuchofthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*grepcodepassesaroundagrep_sourceandassumesthatits\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "buf"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\""
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*pointeristhebeginningofthethingwearesearching.Solet's"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*installourtextconv'dversionintothegrep_source,takingcarenot"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*toleakanyexistingbuffer."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_clear_data(gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=buf;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=size;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintis_empty_line(constchar*bol,constchar*eol)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(bol<eol&&isspace(*bol))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnbol==eol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_1(structgrep_opt*opt,structgrep_source*gs,intcollect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*peek_bol=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlongleft;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlno=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlast_hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intbinary_match_only=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedcount=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inttry_lookahead=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intshow_function=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structuserdiff_driver*textconv=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumgrep_contextctx=GREP_CONTEXT_HEAD;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xdemitconf_txecfg;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->status_only&&gs->name==NULL)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grepcallwhichcouldprintanamerequires"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\""
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep_source.namebenon-NULL"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->output)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output=std_output;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->pre_context||opt->post_context||opt->file_break||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->funcbody){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Showhunkmarks,exceptforthefirstfile.*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->last_shown)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->show_hunk_mark=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Ifwe'reusingthreadsthenwecan'teasilyidentify"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thefirstfile.Alwaysputhunkmarksinthatcase"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*andskiptheveryfirstonelaterinwork_done()."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->output!=std_output)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->show_hunk_mark=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->last_shown=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->allow_textconv){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_load_driver(gs,opt->repo->index);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Wemightsetupthesharedtextconvcachedatahere,which"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*isnotthread-safe.Also,get_oid_with_context()and"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*parse_object()mightbeinternallycalled.Astheyarenot"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*currentlythread-safeandmightberacywithobjectreading,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*obj_read_lock()mustbecalled."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_attr_lock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "obj_read_lock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "textconv=userdiff_get_textconv(opt->repo,gs->driver);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "obj_read_unlock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_attr_unlock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Weknowtheresultofatextconvistext,soweonlyhavetocare"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*aboutbinaryhandlingifwearenotusingit."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!textconv){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(opt->binary){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_BINARY_DEFAULT:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_source_is_binary(gs,opt->repo->index))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "binary_match_only=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_BINARY_NOMATCH:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(grep_source_is_binary(gs,opt->repo->index))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;/*Assumeunmatch*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_BINARY_TEXT:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "default:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "unknownbinaryhandlingmode"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "memset(&xecfg,0,sizeof(xecfg));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->priv=&xecfg;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "try_lookahead=should_lookahead(opt);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(fill_textconv_grep(opt->repo,textconv,gs)<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol=gs->buf;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "left=gs->size;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(left){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*eol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inthit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ssize_tcno;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ssize_tcol=-1,icol=-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*look_ahead()skipsquicklytothelinethatpossibly"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*hasthenexthit;don'tcallitifweneedtodo"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*somethingmorethanjustskippingthecurrentline"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*inresponsetoanunmatchforthecurrentline.E.g."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*insideapost-contextwindow,wewillshowthecurrent"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*lineasacontextaroundtheprevioushitwhenit"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*doesn'thit."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(try_lookahead"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "&&!(last_hit"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "&&(show_function||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "lno<=last_hit+opt->post_context))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "&&look_ahead(opt,&left,&lno,&bol))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "eol=end_of_line(bol,&left);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if((ctx==GREP_CONTEXT_HEAD)&&(eol==bol))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "ctx=GREP_CONTEXT_BODY;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=match_line(opt,bol,eol,&col,&icol,ctx,collect_hits);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(collect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotonext_line;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep-v-efoo-ebla"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"shouldlistlines"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*thatdonothaveeither,soinversionshould"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*bedoneoutside."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->invert)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "hit=!hit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->unmatch_name_only){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(hit)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotonext_line;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(hit){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "count++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->status_only)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->name_only){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_name(opt,gs->name);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->count)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotonext_line;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(binary_match_only){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "Binaryfile"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",12);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,gs->name,strlen(gs->name),"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->colors[GREP_COLOR_FILENAME]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "matches\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",9);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Hitatthisline.Ifwehaven'tshownthe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*pre-contextlines,wewouldneedtoshowthem."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->pre_context||opt->funcbody)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_pre_context(opt,gs,bol,eol,lno);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "elseif(opt->funcname)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_funcname_line(opt,gs,bol,lno);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cno=opt->invert?icol:col;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(cno<0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Anegativecnoindicatesthattherewasno"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*matchontheline.Wearethusinvertedand"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*beingaskedtoshowalllinesthat_don't_"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*matchagivenexpression.Therefore,setcno"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*to0tosuggestthewholelinematches."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "cno=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line(opt,bol,eol,gs->name,lno,cno+1,':');"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "last_hit=lno;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->funcbody)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_function=1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotonext_line;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(show_function&&(!peek_bol||peek_bol<bol)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlongpeek_left=left;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*peek_eol=eol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Trailingemptylinesarenotinteresting."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Peekpastthemtoseeiftheybelongtothe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*bodyofthecurrentfunction."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "peek_bol=bol;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(is_empty_line(peek_bol,peek_eol)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "peek_bol=peek_eol+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "peek_eol=end_of_line(peek_bol,&peek_left);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(match_funcname(opt,gs,peek_bol,peek_eol))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_function=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(show_function||"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "(last_hit&&lno<=last_hit+opt->post_context)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Ifthelasthitiswithinthepostcontext,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*weneedtoshowthisline."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_line(opt,bol,eol,gs->name,lno,col+1,'-');"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "next_line:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "bol=eol+1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!left)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "left--;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "lno++;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(collect_hits)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->status_only)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnopt->unmatch_name_only;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->unmatch_name_only){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Wedidnotseeanyhit,sowewanttoshowthis*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "show_name(opt,gs->name);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xdiff_clear_find_func(&xecfg);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->priv=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*NEEDSWORK:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Thereal\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "grep-cfoo*.c"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"givesmany\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "bar.c:0"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"lines,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*whichfeelsmostlyuselessbutsometimesuseful.Maybe"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*makeitanotheroption?Fornowsuppressthem."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->count&&count){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "charbuf[32];"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->pathname){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_color(opt,gs->name,strlen(gs->name),"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->colors[GREP_COLOR_FILENAME]);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "output_sep(opt,':');"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "xsnprintf(buf,sizeof(buf),\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "%u\\n"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\",count);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->output(opt,buf,strlen(buf));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return!!last_hit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidclr_hit_marker(structgrep_expr*x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*All-hitmarkersaremeaningfulonlyattheverytoplevel"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*ORnode."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(1){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(x->node!=GREP_NODE_OR)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x->u.binary.left->hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=x->u.binary.right;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintchk_hit_marker(structgrep_expr*x)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Toplevelnodeshavehitmarkers.Seeiftheyallarehits*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "while(1){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(x->node!=GREP_NODE_OR)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnx->hit;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!x->u.binary.left->hit)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "x=x->u.binary.right;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intgrep_source(structgrep_opt*opt,structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*wedonothavetodothetwo-passgrepwhenwedonotcheck"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*buffer-wide\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "all-match"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!opt->all_match&&!opt->no_body_match)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_source_1(opt,gs,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*Otherwisethetoplevel\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "or"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"termshitabitdifferently."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*Wefirstclearhitmarkersfromthem."
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "clr_hit_marker(opt->pattern_expression);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "opt->body_hit=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_1(opt,gs,1);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->all_match&&!chk_hit_marker(opt->pattern_expression))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(opt->no_body_match&&opt->body_hit)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_source_1(opt,gs,0);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticvoidgrep_source_init_buf(structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*buf,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "unsignedlongsize)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->type=GREP_SOURCE_BUF;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->name=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->path=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=buf;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=size;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->driver=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->identifier=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intgrep_buffer(structgrep_opt*opt,constchar*buf,unsignedlongsize)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structgrep_sourcegs;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "intr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_init_buf(&gs,buf,size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "r=grep_source(opt,&gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_clear(&gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnr;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_source_init_file(structgrep_source*gs,constchar*name,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*path)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->type=GREP_SOURCE_FILE;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->name=xstrdup_or_null(name);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->path=xstrdup_or_null(path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->driver=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->identifier=xstrdup(path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_source_init_oid(structgrep_source*gs,constchar*name,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*path,conststructobject_id*oid,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structrepository*repo)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->type=GREP_SOURCE_OID;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->name=xstrdup_or_null(name);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->path=xstrdup_or_null(path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->driver=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->identifier=oiddup(oid);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->repo=repo;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_source_clear(structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "FREE_AND_NULL(gs->name);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "FREE_AND_NULL(gs->path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "FREE_AND_NULL(gs->identifier);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_clear_data(gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_source_clear_data(structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(gs->type){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_FILE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_OID:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*thesetypesownthebuffer*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free((char*)gs->buf);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=NULL;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_BUF:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "/*leaveuser-providedbufintact*/"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "break;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_load_oid(structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "enumobject_typetype;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=repo_read_object_file(gs->repo,gs->identifier,&type,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "&gs->size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!gs->buf)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnerror(_(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "'%s':unabletoread%s"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"),"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->name,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "oid_to_hex(gs->identifier));"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_load_file(structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "constchar*filename=gs->identifier;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structstatst;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "char*data;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size_tsize;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "inti;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(lstat(filename,&st)<0){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "err_ret:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(errno!=ENOENT)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "error_errno(_(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "failedtostat'%s'"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"),filename);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!S_ISREG(st.st_mode))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "size=xsize_t(st.st_size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "i=open(filename,O_RDONLY);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(i<0)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gotoerr_ret;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "data=xmallocz(size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(st.st_size!=read_in_full(i,data,size)){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "error_errno(_(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "'%s':shortread"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\"),filename);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "close(i);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "free(data);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "close(i);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->buf=data;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->size=size;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_load(structgrep_source*gs)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(gs->buf)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "switch(gs->type){"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_FILE:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_source_load_file(gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_OID:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngrep_source_load_oid(gs);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "caseGREP_SOURCE_BUF:"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngs->buf?0:-1;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "BUG(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "invalidgrep_sourcetypetoload"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "voidgrep_source_load_driver(structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structindex_state*istate)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(gs->driver)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_attr_lock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(gs->path)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->driver=userdiff_find_by_path(istate,gs->path);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!gs->driver)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "gs->driver=userdiff_find_by_name(\""
    },
    {
      "color": {
        "cct": 6755.04,
        "value": "#d5ced9"
      },
      "content": "default"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "\");"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_attr_unlock();"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "staticintgrep_source_is_binary(structgrep_source*gs,"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "structindex_state*istate)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "{"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "grep_source_load_driver(gs,istate);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(gs->driver->binary!=-1)"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returngs->driver->binary;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "if(!grep_source_load(gs))"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "returnbuffer_is_binary(gs->buf,gs->size);"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "return0;"
    },
    {
      "color": {
        "cct": 5619.32,
        "value": "#96e072"
      },
      "content": "}"
    }
  ],
  "style": {
    "background-color": {
      "cct": 9799.61,
      "value": "#23262e"
    },
    "color": {
      "cct": 6755.04,
      "value": "#d5ced9"
    },
    "font-family": [
      "Consolas",
      "Courier New",
      "monospace"
    ],
    "font-size": "14px",
    "font-weight": "normal",
    "line-height": "19px",
    "white-space": "pre"
  }
}
