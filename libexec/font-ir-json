#!/usr/bin/env ruby
# frozen_string_literal: true

require 'json'

require 'bdf'

def calculate!(hash)
  hash[:bits] = (hash[:bitmap] || []).map do |string|
    string.scan(/../).map { |pair| ("%08B" % pair.hex) }.join
  end

  return hash if hash[:bits].nil? || hash[:bits].empty?

  hash[:nrows]    = 14 # TODO hash[:bits].size
  hash[:ncols]    = 14 # TODO hash[:bits].first.size
  hash[:areafull] = hash[:nrows] * hash[:ncols] # TODO hash[:bits].size * hash[:bits].first.size
  hash[:count1]   = hash[:bits].sum { |row| row.count('1') }
  hash[:count0]   = hash[:areafull] - hash[:count1]

  hash
end

def process(font)
  result = {}
  font.instance_variable_get('@chars').each do |code, data|
    result[code.hex.chr(Encoding::UTF_8)] = calculate!(data)
  end
  result
end

def main
  puts JSON.pretty_generate process(BDF::Font.from_file(ARGV.empty? ? '/dev/stdin' : ARGV.first))
end

main
