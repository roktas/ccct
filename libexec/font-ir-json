#!/usr/bin/env ruby
# frozen_string_literal: true

require 'json'

require 'bdf'

def calculate!(hash)
  hash[:bits] = (hash[:bitmap] || []).map do |string|
    string.scan(/../).map { |pair| ("%08B" % pair.hex) }.join
  end

  return hash if hash[:bits].nil? || hash[:bits].empty?

  hash[:ones] = hash[:bits].sum { |row| row.count('1') }
  hash
end

def extremes(font)
  ascii = font.instance_variable_get('@chars').select do |code, data|
    hex = code.hex
    hex >= 0x20 && hex <= 0x7F
  end

  widest = {}
  widest[:char], widest[:data] = *ascii.max_by { |code, data| data[:bbx][:w] }
  width = widest[:data][:bbx][:w]

  tallest = {}
  tallest[:char], tallest[:data] = *ascii.max_by { |code, data| data[:bbx][:h] }
  height = tallest[:data][:bbx][:h]

  [width, height]
end

def process(font)
  width, height = extremes(font)

  chars = {}
  font.instance_variable_get('@chars').each do |code, data|
    chars[code.hex.chr(Encoding::UTF_8)] = calculate!(data)
  end

  {
    chars: chars,
    width: width,
    height: height,
  }
end

def main
  puts JSON.pretty_generate process(BDF::Font.from_file(ARGV.empty? ? '/dev/stdin' : ARGV.first))
end

main
